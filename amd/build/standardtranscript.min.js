define("assignsubmission_cloudpoodll/standardtranscript",["jquery","core/log","core/str","core/ajax","core/notification"],(function($,log,str,Ajax,notification){return log.debug("Standard Transcript: initialising"),{init:function(opts){var component=opts.component,playerid=opts.playerid,containerid=opts.containerid,cssprefix=opts.cssprefix,config={settings:{}};playerid&&$("#"+playerid).length&&(config.component=component,config.container=$("#"+containerid),config.prefix=cssprefix,config.player=$("#"+playerid)[0],config.transcripturl=opts.transcripturl,config.title=M.util.get_string("transcripttitle",component),config.assignmentid=opts.assignmentid,this.fetch_transcript(config))},fetch_transcript:function(config){var that=this,header='<header class="'+config.prefix+'-header">'+config.title+"</header>";config.container.load(config.transcripturl,(function(){config.container.prepend(header),that.prepare_corrections_button(config)}))},prepare_corrections_button:function(config){var that=this;config.button=config.container.append('<a class="btn btn-standard" href="#">fetch corrections</a>'),$(config.button).on("click",(function(){that.fetch_corrections(config)}))},fetch_corrections:function(config){var text=config.container.text();text&&""!==text&&""!==text.trim()&&Ajax.call([{methodname:"assignsubmission_cloudpoodll_check_grammar",args:{assignmentid:config.assignmentid,text:text},done:function(ajaxresult){var payloadobject=JSON.parse(ajaxresult);payloadobject?config.container.append(payloadobject.corrections):(config.container.append("could not fetch corrections"),log.debug("result not fetched"))},fail:notification.exception}])}}}));

//# sourceMappingURL=standardtranscript.min.js.map